#set-option -g default-command "/opt/local/bin/reattach-to-user-namespace -l bash"
###########################################################################
# Mouse mode is on by default.
# <prefix> M -- to turn it off
# <prefix> m -- to turn it on
#
# As of tmux 2.1, a backward-incompatible change was introduced.
# mode-mouse and mouse-* no longer exist, replaced by simply
# mouse <on|off>. Which is great, and easier, but unfortunately I use
# tmux on systems which I don't foresee going to 2.1+ anytime soon.
# So, time to test versions... this is kind of cheap and hacky, and it
# won't work for 2.2 and beyond, but will work for now. I tried to make
# this more generalized but have not been successful so far.
#
set -g mouse on
#set-option -g default-command "reattach-to-user-namespace -l bash"
set -g history-limit 10000
set -g allow-rename off
set-window-option -g mode-keys vi
set -g status-keys vi
#set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"

#prevent esc w from opening window list
set -s escape-time 0

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# test
#bind-key -n C-t new-window
#bind-key -n M-s new-window
#bind-key -n C-M-t new-window

# iTerm2-equivalency
# movement / resize
bind-key -n C-M-j resize-pane -D
bind-key -n M-j   select-pane -D
bind-key -n C-M-k resize-pane -U
bind-key -n M-k   select-pane -U
bind-key -n C-M-h resize-pane -L
bind-key -n M-h   select-pane -L
bind-key -n C-M-l resize-pane -R
bind-key -n M-l   select-pane -R
# reload
bind-key -n M-r   source-file /Users/peter/.tmux.conf \; display-message "Reload Config!!"
# splits, sync, zoom, prev/next, new
bind-key -n M-\'  split-window -c "#{pane_current_path}"
bind-key -n M-\;  split-window -h -c "#{pane_current_path}"
bind-key -n M-y   set-option synchronize-pane \; display-message "Pane synchronization toggled"~/Desktop/home/itermcolors
bind-key -n M-z   resize-pane -Z
bind-key -n M-n   next-window
bind-key -n M-p   previous-window
bind-key -n M-c   new-window -c "#{pane_curent_path}"
bind-key -n M-,   display-menu -T "#[align=centre]#{window_index}:#{window_name}" -x W -y W "#{?#{>:#{session_windows},1},,-}Swap Left" l { swap-window -t :-1 } "#{?#{>:#{session_windows},1},,-}Swap Right" r { swap-window -t :+1 } "#{?pane_marked_set,,-}Swap Marked" s { swap-window } '' Kill X { kill-window } Respawn R { respawn-window -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } Rename n { command-prompt -F -I "#W" { rename-window -t "#{window_id}" "%%" } } '' "New After" w { new-window -a } "New At End" W { new-window }
bind-key -n M-=   choose-buffer -Z
bind-key -n M-.   display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -x P -y P "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < { send-keys -X history-top } "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > { send-keys -X history-bottom } '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r { if-shell -F "#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}" "copy-mode -t=" ; send-keys -X -t = search-backward "#{q:mouse_word}" } "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y { copy-mode -q ; send-keys -l "#{q:mouse_word}" } "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c { copy-mode -q ; set-buffer "#{q:mouse_word}" } "#{?mouse_line,Copy Line,}" l { copy-mode -q ; set-buffer "#{q:mouse_line}" } '' "#{?mouse_hyperlink,Type #[underscore]#{=/9/...:mouse_hyperlink},}" C-h { copy-mode -q ; send-keys -l "#{q:mouse_hyperlink}" } "#{?mouse_hyperlink,Copy #[underscore]#{=/9/...:mouse_hyperlink},}" h { copy-mode -q ; set-buffer "#{q:mouse_hyperlink}" } '' "Horizontal Split" h { split-window -h } "Vertical Split" v { split-window -v } '' "#{?#{>:#{window_panes},1},,-}Swap Up" u { swap-pane -U } "#{?#{>:#{window_panes},1},,-}Swap Down" d { swap-pane -D } "#{?pane_marked_set,,-}Swap Marked" s { swap-pane } '' Kill X { kill-pane } Respawn R { respawn-pane -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z }
# sandbox
bind-key -n M-m   new-window cmatrix -s

#bind-key -r h run-shell 'PREF="$HOME/workspace/hid" && cd $PREF && PROJECT=$(command ls */*/composer.json | sed "s/\/composer.json//" | fzf-tmux -p) && cd $PROJECT || cd -'
bind-key J resize-pane -D
#bind-key -n C-M-J resize-pane -D
bind-key K resize-pane -U
bind-key H resize-pane -L
bind-key L resize-pane -R
bind-key Y set synchronize-pane\; display-message "Pane synchronization toggled"

bind -n M-w choose-window 

set-option -g status-left "[#{session_name}|#{window_index}|#{pane_index}]"
set-option -g status-right '%Y/%m/%d %H:%M #[gs=green]#S #[default]'
set-option -g status-interval 60
#set -g status-right '#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '
set -g status-right '#{battery_status_bg} #{battery_icon} #{battery_percentage} | %Y/%m/%d %H:%M #[gs=green]#S #[default]'

bind r source-file ~/.tmux.conf\; display-message "Reload Config!!"

set-environment -g PATH "/opt/homebrew/sbin:/opt/homebrew/bin:/opt/local/sbin:/opt/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

set -g @plugin 'tmux-plugins/tpm'

#set -g @plugin 'tmux-plugins/tmux-battery'
# List of plugins
# set -g @tpm_plugins '          \
#   tmux-plugins/tpm             \
#   tmux-plugins/tmux-sensible   \
#   tmux-plugins/tmux-resurrect  \
# '

#set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'erikw/tmux-powerline'
set -g @plugin 'xamut/tmux-spotify'
set -g @plugin 'aloyr/tmux-platform'
set -g @plugin 'aloyr/tmux-powerline-toggler'
#set -g @plugin 'christoomey/vim-tmux-navigator'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#run-shell ~/.tmux/plugins/tmux-platform/tmux-platform.tmux

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
###########################################################################

